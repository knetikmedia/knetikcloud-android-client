/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.knetikcloud.model.PropertyFieldListResource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PropertyDefinitionResource
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-14T12:02:11.431-04:00")

public class PropertyDefinitionResource {
  @SerializedName("description")
  private String description = null;

  @SerializedName("field_list")
  private PropertyFieldListResource fieldList = null;

  @SerializedName("friendly_name")
  private String friendlyName = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("option_label_path")
  private String optionLabelPath = null;

  @SerializedName("option_value_path")
  private String optionValuePath = null;

  @SerializedName("options_url")
  private String optionsUrl = null;

  @SerializedName("required")
  private Boolean required = null;

  @SerializedName("type")
  private String type = null;

  public PropertyDefinitionResource description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the property
   * @return description
  **/
  @ApiModelProperty(value = "The description of the property")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PropertyDefinitionResource fieldList(PropertyFieldListResource fieldList) {
    this.fieldList = fieldList;
    return this;
  }

   /**
   * A list of the fields on both the property definition and property of this type
   * @return fieldList
  **/
  @ApiModelProperty(value = "A list of the fields on both the property definition and property of this type")
  public PropertyFieldListResource getFieldList() {
    return fieldList;
  }

  public void setFieldList(PropertyFieldListResource fieldList) {
    this.fieldList = fieldList;
  }

  public PropertyDefinitionResource friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

   /**
   * The friendly front-facing name of the property
   * @return friendlyName
  **/
  @ApiModelProperty(value = "The friendly front-facing name of the property")
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }

  public PropertyDefinitionResource name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the property
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the property")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PropertyDefinitionResource optionLabelPath(String optionLabelPath) {
    this.optionLabelPath = optionLabelPath;
    return this;
  }

   /**
   * The JSON path to the option label
   * @return optionLabelPath
  **/
  @ApiModelProperty(example = "path.to.label", value = "The JSON path to the option label")
  public String getOptionLabelPath() {
    return optionLabelPath;
  }

  public void setOptionLabelPath(String optionLabelPath) {
    this.optionLabelPath = optionLabelPath;
  }

  public PropertyDefinitionResource optionValuePath(String optionValuePath) {
    this.optionValuePath = optionValuePath;
    return this;
  }

   /**
   * The JSON path to the option value
   * @return optionValuePath
  **/
  @ApiModelProperty(example = "path.to.value", value = "The JSON path to the option value")
  public String getOptionValuePath() {
    return optionValuePath;
  }

  public void setOptionValuePath(String optionValuePath) {
    this.optionValuePath = optionValuePath;
  }

  public PropertyDefinitionResource optionsUrl(String optionsUrl) {
    this.optionsUrl = optionsUrl;
    return this;
  }

   /**
   * URL of service containing the property options (assumed JSON array)
   * @return optionsUrl
  **/
  @ApiModelProperty(value = "URL of service containing the property options (assumed JSON array)")
  public String getOptionsUrl() {
    return optionsUrl;
  }

  public void setOptionsUrl(String optionsUrl) {
    this.optionsUrl = optionsUrl;
  }

  public PropertyDefinitionResource required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Whether the property is required
   * @return required
  **/
  @ApiModelProperty(example = "false", required = true, value = "Whether the property is required")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public PropertyDefinitionResource type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the property. Used for polymorphic type recognition and thus must match an expected type with additional properties.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The type of the property. Used for polymorphic type recognition and thus must match an expected type with additional properties.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyDefinitionResource propertyDefinitionResource = (PropertyDefinitionResource) o;
    return Objects.equals(this.description, propertyDefinitionResource.description) &&
        Objects.equals(this.fieldList, propertyDefinitionResource.fieldList) &&
        Objects.equals(this.friendlyName, propertyDefinitionResource.friendlyName) &&
        Objects.equals(this.name, propertyDefinitionResource.name) &&
        Objects.equals(this.optionLabelPath, propertyDefinitionResource.optionLabelPath) &&
        Objects.equals(this.optionValuePath, propertyDefinitionResource.optionValuePath) &&
        Objects.equals(this.optionsUrl, propertyDefinitionResource.optionsUrl) &&
        Objects.equals(this.required, propertyDefinitionResource.required) &&
        Objects.equals(this.type, propertyDefinitionResource.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, fieldList, friendlyName, name, optionLabelPath, optionValuePath, optionsUrl, required, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyDefinitionResource {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fieldList: ").append(toIndentedString(fieldList)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    optionLabelPath: ").append(toIndentedString(optionLabelPath)).append("\n");
    sb.append("    optionValuePath: ").append(toIndentedString(optionValuePath)).append("\n");
    sb.append("    optionsUrl: ").append(toIndentedString(optionsUrl)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

